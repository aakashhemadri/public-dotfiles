#!/usr/bin/env bash

function prompt_command() {
    local EXIT="$?"
    PS1=""

    local RST='\[\e[m\]'
    local BLK='\[\e[30m]'
    local RED='\[\e[31m\]'
    local GRE='\[\e[32m\]'
    local YEL='\[\e[33m\]'
    local BLU='\[\e[34m\]'
    local PUR='\[\e[35m\]'
    local TUR='\[\e[36m\]'
    local WHT='\[\e[37m\]'
    local NLN='\n'

    # get current branch in git repo
    function parse_git_branch() {
        BRANCH=$(git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
        if [ ! "${BRANCH}" == "" ]; then
            STAT=$(parse_git_dirty)
            echo "(${BRANCH}${STAT})"
        else
            echo ""
        fi
    }

    # get current status of git repo
    function parse_git_dirty() {
        status=$(git status 2>&1 | tee)
        dirty=$(
            echo -n "${status}" 2>/dev/null | grep "modified:" &>/dev/null
            echo "$?"
        )
        untracked=$(
            echo -n "${status}" 2>/dev/null | grep "Untracked files" &>/dev/null
            echo "$?"
        )
        ahead=$(
            echo -n "${status}" 2>/dev/null | grep "Your branch is ahead of" &>/dev/null
            echo "$?"
        )
        newfile=$(
            echo -n "${status}" 2>/dev/null | grep "new file:" &>/dev/null
            echo "$?"
        )
        renamed=$(
            echo -n "${status}" 2>/dev/null | grep "renamed:" &>/dev/null
            echo "$?"
        )
        deleted=$(
            echo -n "${status}" 2>/dev/null | grep "deleted:" &>/dev/null
            echo "$?"
        )
        bits=''
        if [ "${renamed}" == "0" ]; then
            bits=">${bits}"
        fi
        if [ "${ahead}" == "0" ]; then
            bits="*${bits}"
        fi
        if [ "${newfile}" == "0" ]; then
            bits="+${bits}"
        fi
        if [ "${untracked}" == "0" ]; then
            bits="?${bits}"
        fi
        if [ "${deleted}" == "0" ]; then
            bits="x${bits}"
        fi
        if [ "${dirty}" == "0" ]; then
            bits="!${bits}"
        fi
        if [ ! "${bits}" == "" ]; then
            echo "${bits}"
        else
            echo ""
        fi
    }

    PS1+="${TUR}\u${RST}${WHT}@${RST}${BLU}\H${RST}:${PUR}\w${RST}${GRE}\`parse_git_branch\`${RST}${NLN}"
    
    if [[ $EXIT != 0 ]]; then
        PS1+="${RED}${EXIT}>>${RST} "
    else
        PS1+="${GRE}${EXIT}>>${RST} "
    fi
}

PROMPT_COMMAND=prompt_command
